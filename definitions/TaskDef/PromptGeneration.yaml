description: |
  <ant-task>
  {LaymanPrompt}
  </ant-task>
  
  <ant-persona>
  {Persona}
  </ant-persona>
  
  <ant-constraints>
  {Constraints}
  </ant-constraints>

  <ant-purpose>
  Your task is to dynamically unify the given components `<ant-task>` (input task or goal), `<ant-persona>` (the persona for defined input taks), and `<ant-constraints>` into a single, combined prompt.  
  The final prompt must be:
    - A comprehensive integration of task content, persona’s viewpoint, and all specified constraints.
    - Logically sound, cohesive, and reflective of all input components.
    - Free of instructional commentary or format explanations in the output.
  The generated prompt must guide reasoning effectively and allow the assistant to interpret and respond dynamically.
  </ant-purpose>

  <ant-tagging-system>  
   While generating the unified prompt, you MUST ensure that the prompt contains the following prompt tag system implemented within it.Ensure that the tags are not limited to the following and can be expanded as needed:
   - `<assisstant-task>`: Represents the primary task or goal that needs to be refined, analyzed, or acted upon by the system or intelligent assistant.  
   - `<assisstant-constraints>`: Specifies restrictions, boundaries, or non-negotiable elements that must be respected during the processing of the prompt or task.  
   - `<assisstant-context>`: Encapsulates the purpose of the agent, user prompts, specialized critiques, and interactions, helping provide an overall understanding of the task.  
   - `<assisstant-instructions>`: Provides system-wide rules, protocols, and instructions to ensure consistency, coherence, and quality in processing all elements of the task.  
   - `<assisstant-steps>`: Outlines detailed steps that the system or agents are instructed to take to accomplish the tasks or refine the prompts.  
   - `<assisstant-reasoning>`: Specifies reasoning frameworks and methodologies (e.g., Tree of Thoughts, Meta-Prompting) for analyzing and refining tasks effectively.  
   - `<assisstant-output-instructions>`: Specifies exactly what should be output by the system or agents, often including formatting templates for achieving precise deliverables.  
   - `<assisstant-prompting-tags>`: Provides a predefined list of advanced prompting techniques (e.g., Role-based Reasoning, Iterative Deepening) that can guide task refinement.  
   - `<assisstant-task-X>`: Represents one of multiple input tasks (e.g., `<assisstant-task-1>`, `<assisstant-task-2>`) that can be synthesized or cross-referenced for refinement purposes.  
   - `<assisstant-action-steps>`: Defines actionable measures or guidance for refining or transforming a task or prompt dynamically and effectively.  
   **NOTE**: You are NOT being told to use all of these tags, but to ensure that the prompt contains the necessary tags for clarity and consistency and to use these to guide your understanding of the tagging system.
   **NOTE**: You MUST expand the tagging system. Use the above samples only to define your understanding of how it works and then Generate new tags where needed and use them thoroughly.
   Each Tag must be properly closed and opened and the content within them must be relevant to the task at hand.
   Example: `<sample-tag>`, `</sample-tag>`
   </ant-tagging-system>   

  <ant-context>
  Inputs to process for creating the unified prompt:
  1. `<ant-task>`: The initial task or goal requiring refinement and integration.
  2. `<ant-persona>`: Defined persona providing perspective, or a specific role for the assistant to adopt.
  3. `<ant-constraints>`: A set of restrictions, parameters, or non-negotiable elements that must be reflected in full in the final output.  
  4. `<ant-tagging-system>`: A predefined system of tags that must be serve as a baseline for tags implemented within the unified prompt for consistency and clarity.
  These elements collectively define the scope, tone, and boundaries of the unified task prompt.
  </ant-context>

  <ant-operating-instructions>
  - Begin by analyzing all three components (`<ant-task>`, `<ant-persona>`, `<ant-constraints>`) to fully understand their purpose, dependencies, and relationships among each other.
  - Understand each tag within the `<ant-tagging-system>` and their purpose in structuring the unified prompt effectively.
  - Utilize reasoning techniques to carefully integrate all inputs into a complete and logical prompt:
    + Use **Least-To-Most Prompting** to break down the goal into simpler aspects, building toward a comprehensive reconstruction.
    + Apply **Meta-Prompting** to reflect the persona’s role and constraints conceptually while ensuring alignment with the overall goal.
    + Leverage **Tree of Thoughts** and **Reason + Action Prompting** to explore multiple options for merging the task, persona, and constraints into a single structure.
    + Use **Role-Based Reasoning** to ensure the integrated persona's fits perfectly into the output prompt.
  - Dynamically adjust provided reasoning framework to maintain logical flow, adaptability under constraints, and alignment with key objectives.
  - Ensure that the final prompt is actionable, and fulfills all `<ant-constraints>` without any instructional commentary.
  - Use the `<ant-output-instructions>` to structure your final output, ensuring it meets all specified criteria and is ready for evaluation.
  </ant-operating-instructions>
  
  <ant-steps>
  1. **Understand the Inputs**:  
    - Carefully read and analyze `<ant-task>`, `<ant-persona>`, and `<ant-constraints>`.  
    - Identify the main goal of the task, the persona's perspective, and the constraints that must be adhered to in the final prompt.  

  2. **Understand the Tagging System**:  
    - Review the `<ant-tagging-system>` to understand the predefined tags that must be included in the unified prompt.  
    - Ensure that the tags are implemented effectively to maintain consistency and clarity in the output.
    - Ensure that the tags told are only serving as a baseline and can be expanded as needed.

  3. **Break Down Relationships**:  
    - Identify how the task, persona, and constraints connect to each other.  
    - Find areas where the inputs support each other and where they might conflict or need adjustment to align.  
    - Plot these connections step by step, identifying dependencies between elements and resolving conflicting components logically.  

  4. **Explore Different Paths**:  
    - Start from the task’s core objective and generate different ways the persona and constraints can be combined into a cohesive structure.  
    - For each path, consider how effectively it meets the task’s goals, respects the constraints, and incorporates the persona.  
    - Analyze each option for strengths and weaknesses, ensuring no critical input is overlooked.  

  5. **Evaluate and Prune Paths**:  
    - Reflect on the effectiveness and coherence of each path. Questions to consider:  
      + Does this structure fully incorporate the persona’s influence on the task?  
      + Are all constraints respected without weakening the task’s intent?  
    - Remove paths that fail to meet these criteria or introduce contradictions, retaining only the most effective solutions.  

  6. **Iterate and Refine**:  
    - Take the strongest remaining paths and refine them further, adding depth and clarity.  
    - Focus on ensuring the final structure is logical, cohesive, and actionable while maintaining flexibility for interpretation.  

  7. **Finalize the Unified Prompt**:  
    - Combine all key elements including task goals, persona framing, and constraints into a single, complete prompt.  
    - Ensure the final result is actionable, clear, and reflective of all inputs without additional commentary or unnecessary complexity.

  8. **Implement the Tagging System**:  
    - Embed the predefined tags from the `<ant-tagging-system>` into the unified prompt.  
    - Ensure that each tag is used appropriately and that the prompt is structured according to the tagging system guidelines.
  </ant-steps>

  <ant-reasoning>
  Use structured reasoning techniques for crafting the unified prompt:
  1. **Least-To-Most Prompting**: Simplify the task into layers, then iteratively reconstruct to ensure comprehensive integration.
  2. **Tree of Thoughts**: Explore multiple pathways for merging key elements (task goals, persona framing, constraints) dynamically.
  3. **Role-Based Reasoning**: Integrate the persona’s perspective organically. Reflect on how the assistant’s role enhances the task.
  4. **Dynamic Adjustments**: Use feedback loops (e.g., self-ask analysis) to refine logical coherence and strengthen alignment between inputs.
  5. **Iterative Deepening**: Reassess and refine by layering additional insights at every stage of integration, ensuring complete adherence to constraints.
  </ant-reasoning>

  <ant-output-instructions>
  - Your output must include:
      - **Unified Prompt**: Provide a single, complete task prompt that integrates `<ant-task>`, `<ant-persona>`, and `<ant-constraints>` cohesively.
      - **Key Qualities of the Unified Prompt**:
          + Reflects all inputs seamlessly with no omissions or contradictions.
          + Aligns `<ant-task>` objectives with the persona role dynamically and adheres strictly to `<ant-constraints>`.
          + Ensures logical clarity, adaptability, and coherence, allowing for dynamic reasoning within the assistant’s response.
      - **Do NOT Include Instructional Text**:
          + Provide only the fully synthesized prompt without explanation, meta-commentary, or formatting guides.
      - **Tagging System Implementation**:
          + Ensure that the predefined tags from `<ant-tagging-system>` are embedded within the unified prompt for consistency and clarity.
          + Use the tags appropriately to structure the prompt effectively and maintain logical flow.
          + Expand the tagging system as needed to enhance the prompt’s structure and readability.
  </ant-output-instructions>
expected_output: |
  <ant-tagging-system>  
   While generating the unified prompt, you MUST ensure that the prompt contains the following prompt tag system implemented within it.Ensure that the tags are not limited to the following and can be expanded as needed:
   - `<assisstant-task>`: Represents the primary task or goal that needs to be refined, analyzed, or acted upon by the system or intelligent assistant.  
   - `<assisstant-constraints>`: Specifies restrictions, boundaries, or non-negotiable elements that must be respected during the processing of the prompt or task.  
   - `<assisstant-context>`: Encapsulates the purpose of the agent, user prompts, specialized critiques, and interactions, helping provide an overall understanding of the task.  
   - `<assisstant-instructions>`: Provides system-wide rules, protocols, and instructions to ensure consistency, coherence, and quality in processing all elements of the task.  
   - `<assisstant-steps>`: Outlines detailed steps that the system or agents are instructed to take to accomplish the tasks or refine the prompts.  
   - `<assisstant-reasoning>`: Specifies reasoning frameworks and methodologies (e.g., Tree of Thoughts, Meta-Prompting) for analyzing and refining tasks effectively.  
   - `<assisstant-output-instructions>`: Specifies exactly what should be output by the system or agents, often including formatting templates for achieving precise deliverables.  
   - `<assisstant-prompting-tags>`: Provides a predefined list of advanced prompting techniques (e.g., Role-based Reasoning, Iterative Deepening) that can guide task refinement.  
   - `<assisstant-task-X>`: Represents one of multiple input tasks (e.g., `<assisstant-task-1>`, `<assisstant-task-2>`) that can be synthesized or cross-referenced for refinement purposes.  
   - `<assisstant-action-steps>`: Defines actionable measures or guidance for refining or transforming a task or prompt dynamically and effectively.  
   **NOTE**: You are NOT being told to use all of these tags, but to ensure that the prompt contains the necessary tags for clarity and consistency and to use these to guide your understanding of the tagging system.
   **NOTE**: You MUST expand the tagging system. Use the above samples only to define your understanding of how it works and then Generate new tags where needed and use them thoroughly.
   Each Tag must be properly closed and opened and the content within them must be relevant to the task at hand.
   Example: `<sample-tag>`, `</sample-tag>`
   </ant-tagging-system>    

  <ant-output-instructions>
  - Your output must include:
      - **Unified Prompt**: Provide a single, complete task prompt that integrates `<ant-task>`, `<ant-persona>`, and `<ant-constraints>` cohesively.
      - **Key Qualities of the Unified Prompt**:
          + Reflects all inputs seamlessly with no omissions or contradictions.
          + Aligns `<ant-task>` objectives with the persona role dynamically and adheres strictly to `<ant-constraints>`.
          + Ensures logical clarity, adaptability, and coherence, allowing for dynamic reasoning within the assistant’s response.
      - **Do NOT Include Instructional Text**:
          + Provide only the fully synthesized prompt without explanation, meta-commentary, or formatting guides.
      - **Tagging System Implementation**:
          + Ensure that the predefined tags from `<ant-tagging-system>` are embedded within the unified prompt for consistency and clarity.
          + Use the tags appropriately to structure the prompt effectively and maintain logical flow.
          + Expand the tagging system as needed to enhance the prompt’s structure and readability.
  </ant-output-instructions>
